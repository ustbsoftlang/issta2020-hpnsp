title = "Crystal-MD Configure File"
version = "0.3.1"
# <a href='https://github.com/toml-lang/toml'>toml</a> configure file for Crystal-MD application,
# writen by <a href='mailto:genshenchu@gmail.com'>genshen</a>"

# for BCC struct
[simulation]
phasespace = [80, 80, 80] # box size, the count of lattice at each dimension. #int array type
cutoff_radius_factor = 1.96125  # the real cutoff radius is lattice_cosnt , double type
lattice_const = 2.85532   # lattice const, double type
timesteps =  41000  # unsigned long type
timesteps_length = 0.0001  # simulation time steps length for each timestep, double type.

    [simulation.createphase]  # read atoms information from file or create atoms.
    create_phase = true  # boolean type. true: create atoms,false: read atoms.
    create_t_set = 600.0   # temperature double type, for create mode
    create_seed = 466953 # int type, for create mode
    #read_phase_filename = ""  # string type, for read mode.

    # types of alloy
    [simulation.alloy]
        create_seed = 1024 # random seek for creating atoms in Fe-Cu-Ni alloy material.
        [simulation.alloy.ratio] # all interger type. # Fe:Cu:Ni = 95:2:3
            Fe = 95
            Cu = 4
            Ni = 1

    [simulation.collision]
    collision_step = 2  # unsigned long type
    lat = [25, 25, 25, 0]  # int array type
    pka = 5.0 # double, unit: eV, default:0
    direction = [1.0, 3.0, 5.0]  # double array type, pka direction

    # potential file config
    [simulation.potential_file]
    type = "setfl" # string type
    filename = "FeCuNi.eam.alloy" # string type


[output]
atoms_dump_mode = "copy" # output mode,string, "copy"(copy all atoms to memory and then output) or "direct" (output atoms directly) ;
atoms_dump_file_path = "crystal_mdl.{}.out" # string,filename or path of dumped atoms, default value is "crystal_md.out"
origin_dump_path = "crystal_mdl.origin.out" # string,filename or path of dumped origin atoms before collision. Leave it empty for skipping dumping
atoms_dump_interval = 10
by_frame=true # bool type, used in copy mode, dump to mulpile file, one file for each frame.
    [output.logs]
    logs_mode = "console" # logs mode, string; valuse: "console" output will be printed on console/terminal, "file" logs will be saved in files.
    logs_filename = "" # filename of log file, string; if leaving empty, program will generate an unique log filename. (And by default, output will append the end of log file.).

[author]
original_author = "BaiHe"
original_author_email = "baihe_ustb@163.com"
developers = ["BaiHe<baihe_ustb@163.com>", "ChuGenshen<genshenchu@gmail.com>"]
organization = "USTB"
